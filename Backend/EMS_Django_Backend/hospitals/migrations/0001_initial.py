# Generated by Django 3.1.6 on 2021-02-03 06:32

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Diversion',
            fields=[
                ('type', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialtyCenter',
            fields=[
                ('type', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('street', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=2, validators=[django.core.validators.RegexValidator('^((A[LKZR])|(C[AOT])|(D[EC])|(FL)|(GA)|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EDAINSOT])|(N[EVHJMYCD])|(O[HKR])|(PA)|(RI)|(S[CD])|(T[NX])|(UT)|(V[TA])|(W[AVIY]))$')])),
                ('zip', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^[0-9]{5}$')])),
                ('phone', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_phone_number', message='The phone number must only contain numbers in the format 01234567890', regex='^[0-9]*$')], verbose_name='phone number')),
                ('rch', models.CharField(max_length=100)),
                ('ems_region', models.CharField(max_length=100)),
                ('last_updated', models.DateTimeField(null=True)),
                ('nedocs_score', models.CharField(choices=[('Severe', 'Severe'), ('Normal', 'Normal'), ('Busy', 'Busy')], default='Normal', max_length=100, null=True)),
                ('diversions', models.ManyToManyField(blank=True, to='hospitals.Diversion')),
                ('specialty_center', models.ManyToManyField(to='hospitals.SpecialtyCenter')),
            ],
        ),
    ]
